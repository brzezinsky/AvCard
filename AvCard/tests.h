#pragma once
#include "belt.h"
#include <string>
#include <fstream>
#include <cassert>
#include <sstream>
using namespace std;

namespace tests {

	static void output_correct_bytes(string &bytes, string file, string name) {

		ofstream fout(file);

		assert(bytes.length() % 2 == 0);
		fout << "byte " << name << "[] = {\n";
		for (int i = 0; i < bytes.length(); i += 2) {
			fout << "0x" << bytes[i] << bytes[i + 1] << ",\n";
		}
		fout << "};";
		fout.close();

	}

	static void belt_test() {
		byte X[] = {
			0xB1,
			0x94,
			0xBA,
			0xC8,
			0x0A,
			0x08,
			0xF5,
			0x3B,
			0x36,
			0x6D,
			0x00,
			0x8E,
			0x58 };
			/*
			0x4A,
			0x5D,
			0xE4,
			0x85,
			0x04,
			0xFA,
			0x9D,
			0x1B,
			0xB6,
			0xC7,
			0xAC,
			0x25,
			0x2E,
			0x72,
			0xC2,
			0x02,
			0xFD,
			0xCE,
			0x0D,
			0x5B,
			0xE3,
			0xD6,
			0x12,
			0x17,
			0xB9,
			0x61,
			0x81,
			0xFE,
			0x67,
			0x86,
			0xAD,
			0x71,
			0x6B,
			0x89,
			0x0B
		};*/

		byte SIGMA[] = {
			0xE9,
			0xDE,
			0xE7,
			0x2C,
			0x8F,
			0x0C,
			0x0F,
			0xA6,
			0x2D,
			0xDB,
			0x49,
			0xF4,
			0x6F,
			0x73,
			0x96,
			0x47,
			0x06,
			0x07,
			0x53,
			0x16,
			0xED,
			0x24,
			0x7A,
			0x37,
			0x39,
			0xCB,
			0xA3,
			0x83,
			0x03,
			0xA9,
			0x8B,
			0xF6,
		};
		byte s[]= {
			0xBE,
			0x32,
			0x97,
			0x13,
			0x43,
			0xFC,
			0x9A,
			0x48,
			0xA0,
			0x2A,
			0x88,
			0x5F,
			0x19,
			0x4B,
			0x09,
			0xA1		
		};

				uint32 size = sizeof X;
		byte *my_y = new byte[size];
		belt_mac(X, size, SIGMA, my_y);
		//for (int i = 0; i < size; ++i) assert(X[i] == my_x[i]);
		byte *sigma2 = new byte[sizeof SIGMA];
		belt_keyrep(SIGMA, 0x23, sigma2);
		uint32 t = 0;
		t <<= 4;
		uint32 q = t + 2;
	}

};